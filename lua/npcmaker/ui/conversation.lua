if NPCMaker.ConversationDialog then	if NPCMaker.ConversationDialog:IsValid () then		NPCMaker.ConversationDialog:Remove ()	end	NPCMaker.ConversationDialog = nilendlocal function snd (_, v)	return vendlocal PANEL = {}PANEL.Base = "DFrame"function PANEL:Init ()	self:SetTitle ("Conversation")	self:SetWide (ScrW () * 0.5)		self:SetDeleteOnClose (false)	self:MakePopup ()		self.Speech = vgui.Create ("DLabel", self)	self.Speech:SetTall (0)	self.Speech:SetAutoStretchVertical (true)		self:InvalidateLayout ()endfunction PANEL:Clear ()endfunction PANEL:PerformLayout ()	DFrame.PerformLayout (self)		self.Speech:SetPos (8, 28)	self.Speech:SetWide (self:GetWide () - 16)	self.Speech:PerformLayout ()		self:SetTall (snd (self.Speech:GetPos ()) + self.Speech:GetTall () + 8)endfunction PANEL:Remove ()	self:SetVisible (false)	_R.Panel.Remove (self)endfunction PANEL:SetVisible (visible)	_R.Panel.SetVisible (self, visible)		if visible then		self:InvalidateLayout ()		self:Center ()	else	endendfunction NPCMaker.CreateConversationDialog ()	if NPCMaker.ConversationDialog then		return NPCMaker.ConversationDialog	end		NPCMaker.ConversationDialog = vgui.CreateFromTable (PANEL)	return NPCMaker.ConversationDialogendlocal function DisplayConversationDialog (_, _, _, data)	local Dialog = NPCMaker.CreateConversationDialog ()	Dialog:SetVisible (true)enddatastream.Hook ("NPCMaker.ConversationDialog", DisplayConversationDialog)-- debuggingconcommand.Add ("npcmaker_test_conversation", function ()	DisplayConversationDialog (nil, nil, nil,		{			Title = "Herp",			Speech = "Derp"		}	)end)